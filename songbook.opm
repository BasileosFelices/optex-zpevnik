% This is macro package desinged for OpTeX, see http://petr.olsak.net/optex
% songbook.opm, Filip Spelina, 2023
% Available at https://github.com/BasileosFelices/optex-zpevnik

\_def\_songbook_version{0.3, 2023-07-06}
\_codedecl \_songbook_chord {Modular songbook formatter <\_songbook_version>}
\_namespace{songbook}

    \_doc
        \`\beginsongbook` sets the document format using \optex/ macros with some default setinngs. A4 page with 2.5cm margins. Sans latin modern font. 
        Can be overriden after using. `\enlang` for both english hyphenation and included texts.  
    \_cod

\_def\.beginsongbook{
    \_margins/1 a4 (2.5,2.5,2.5,2.5)cm  % okraje 2.5 cm, strana A4
    \_cslang
    \_fontfam[lm] 
    \sans\_rm
    \_typosize[11/14]
    \_parindent=0pt
}

\_nspublic \beginsongbook ;

    \_doc
        Helper internal \`\.newpage` starts a new page.
    \_cod

\_def\.newpage{\_vfil\_break}

    \_doc   
        \`\titlepage` prints an title page with before specified parameters.
        The behaviour of using \~`\titlepage` may be strange if page format is changed. However, spaces should be relative, A5 is still alright. 
        \`\booktitle``{text}` saves songbook title. This is the only mandatory parameter. Similarly you can specify following: 
        \`\booksubtitle``{text}`, \`\bookauthor``{text}`, \`\bookversion``{text}` and \`\bookdate``{text}`. This part is mostly copied from \ulink[https://github.com/BasileosFelices/optex-scenar]{\optex/ scenar package.}
        Additional `\_sdef{_mt:author:??}` can be specified for more language support. Usage is determing by `\??lang` \optex/ macro.
        In two page mode an additional empty page is inserted.
    \_cod

\_eoldef\.booktitle#1{ \_def\.savedtitle{#1} }
\_eoldef\.booksubtitle#1{ \_def\.savedsubtitle{#1} }
\_eoldef\.bookauthor#1{ \_def\.savedauthor{#1} }
\_eoldef\.bookdate#1{ \_def\.saveddate{#1} }
\_eoldef\.bookversion#1{ \_def\.savedversion{#1} }

\_def\.titlefont{\_scalemain\_typoscale[\_magstep4/\_magstep4]}
\_def\.subtitlefont{\_scalemain\_typoscale[\_magstep2/\_magstep2]}
\_def\.titletextfont{\_scalemain\_typoscale[\_magstep1/\_magstep1]}

\_sdef{_mt:author:cs}{Autor}
\_sdef{_mt:author:en}{Author}

\_def\.titlepage{\_nopagenumbers
    {
        \.titletextfont
        \_vfill\_break
        \_vbox to 0.25\_vsize{\_vfil}
        \_centerline{\.titlefont\.savedtitle\_unskip}\_par
        \_vbox to 0.05\_vsize{\_vfil}
        \_ifx\.savedsubtitle\_undefined
            \_else \_centerline{\.subtitlefont \.savedsubtitle \_unskip}\_par
            \_vbox to 0.1\_vsize{\_vfil}
            \_fi
        \_ifx\.savedauthor\_undefined
            \_else \_centerline{\_mtext{author}\_unskip}\_par
            \_centerline{\.savedauthor\_unskip}\_par
            \_vbox to 0.1\_vsize{\_vfil}
        \_fi
        \_ifx\.savedbasedon\_undefined
            \_else \_centerline{\_mtext{basedon}\_unskip}\_par
            \_centerline{\.savedbasedon\_unskip}\_par
            \_vbox to 0.1\_vsize{\_vfil}
            \_fi
        \_ifx\.savedversion\_undefined
            \_else \_vbox to 0.25\_vsize{\_vfil}
            {\.titletextfont\.savedversion}
            \_fi
        \_ifx\.saveddate\_undefined\_par
            \_else 
            \_ifx\.savedversion\_undefined\_vbox to 0.25\_vsize{\_vfil}\_fi
            {\_hfill \.titletextfont \.saveddate \_par}
            \_fi
    }
    \_vfill\_break
    \_ifnum\.twopagemodesreg > 0 \_topglue10pt\_vfill\_break \_fi
    \_footline={\_hss\_tenrm\_folio\_hss}
}

\_nspublic \booktitle \booksubtitle \bookauthor \bookversion \bookdate \titlepage ;

    \_doc   
        \`\contentpage` prints new page with songbook content. \OpTeX `\maketoc` is utilized here but displayed 
        in two columns.
        Page header is language dependent and can be easily edited or new languge definition might be added.
        See \~`\twopagemode` for more about twopage mode. Here we call it the \~`\.twopagecheck` as we need to potentially move the song to an odd page.
    \_cod

\_def\.contentpage{
    {
        \_vfill\_break
        \.songpagecount=2 \.twopagecheck
        \_notoc\_nonum\_insec{\_mtext{toc}}
        \_begmulti 2
            \_maketoc
        \_endmulti
    }
}

% Table of content languages
\_sdef{_mt:toc:cs}{Obsah}
\_sdef{_mt:toc:en}{Contents}

\_nspublic \contentpage ;

    \_doc   
        \`\indexpage` prints new page with song index. Songs are sorted in alphabetical order. \OpTeX `\makeindex` is utilized here but displayed 
        in two columns. This means all \optex/ macros for index can be used normally.
        Page header is language dependent and can be easily edited or new languge definition might be added.
        `\_pgprintA` is redefined here, `\_tocdotfill` is added here for dotted line to page number. 
        See \~`\twopagemode` for more about twopage mode. Here we call it the \~`\.twopagecheck` as we need to potentially move the song to an odd page.
    \_cod

\_def\.indexpage{
    {
        \_vfill\_break
        \.songpagecount=2 \.twopagecheck
        \_notoc\_nonum\_insec{\_mtext{index}}
        \_begmulti 2
            \_makeindex
        \_endmulti
    }
}

% Index language definitions
\_sdef{_mt:index:cs}{Rejstřík}
\_sdef{_mt:index:en}{Index}

% Redefined to include \_tocdotfill
\_def\_pgprintA #1{\_tocdotfill\_ilink[pg:#1]{\_cs{_pgi:#1}}} % \ilink[pg:<gpageno>]{<pageno>}

\_nspublic \indexpage ;

    \_doc   
        Mandatory \`\song``-song name till end of line-` does not only print a song title but also setups everything for
        song writing. Starts new page. Verse count is set to 1. Song title is added to both ToC and index (with song number).
        A song mode where every end of line is treated as `\par` is also started. 
        See \~`\twopagemode` for more about twopage mode. Here we call it the \~`\.twopagecheck` as we need to potentially move the song to an odd page.
    \_cod

\_newcount\.verscnt % counts verse number

\_eoldef\.song#1{
    \.verscnt=1%
    \.newpage%
    \.twopagecheck
    \_insec{#1}\_relax%
    \_iindex{-\_the\_secnum-~#1}%
    \.paroneol%
}

\_nspublic \song ;

    \_doc
        \`\.paroneol` starts a new mode (with `\begingroup`) where every end of line is treated as `\par` with `\nobreak`. Catcode of end of line 
        is set to active character to allow defining it as a macro. \`\.stopparoneol` is defined as counterpart to disable this song mode.
    \_cod

{
    \_catcode`\^^M=13
        \_gdef\.paroneol{%
            \_begingroup%
            \_catcode`\^^M=13%    
            \_def^^M{\_nobreak\_par}%
    }
}

\_def\.stopparoneol{\_endgroup\_normalcatcodes}

    \_doc
        \`\songend` which should be used at every song end to disable the songmode. 
        See \~`\.stopparoneol`. If forgotten then this mode is going to be stacked and thats undefined behaviour as far as I am concerned. 
    \_cod

\_def\.songend{\.stopparoneol\_allowbreak\_par}

\_nspublic \songend;

    \_doc
        \`\author` used to specify song author. Reads till end of line. Only prints as specific title.
    \_cod

\_def\.authortitfont{\_scalemain\_typoscale[\_magstep1/\_magstep1]}

\_eoldef\.author#1{%
    \_leavevmode\_noindent{\.authortitfont#1}\_par\_bigskip\_nobreak%
}

\_nspublic \author ;

    \_doc
        \`\intro` used to specify chords in intro. Reads till end of line. Prints given text in \~`\.chordfont`. 
        `Intro` is printed before margins with `\llap`. Text can be easily changed in `\_sdef` part. 
    \_cod

\_sdef{_mt:intro:cs}{Intro}
\_sdef{_mt:intro:en}{Intro}

\_eoldef\.intro#1{\_noindent%
    \_goodbreak\_bigskip\_leavevmode%
    \_llap{{\_bf\_mtext{intro}\_if$#1$:\_fi\_enskip}}%
    {\.chordfont #1}\_par%
}

\_nspublic \intro ;

    \_doc
        \`\solo` used to specify chords in a solo. Reads till end of line. Prints given text in \~`\.chordfont`. 
        `Solo` is printed before margins with `\llap`. Text can be easily changed in `\_sdef` part. 
    \_cod

\_sdef{_mt:solo:cs}{Solo}
\_sdef{_mt:solo:en}{Solo}

\_eoldef\.solo#1{\_noindent%
    \_goodbreak\_bigskip\_leavevmode%
    \_llap{{\_bf\_mtext{solo}\_if$#1$:\_fi\_enskip}}%
    {\.chordfont #1}\_par%
}

\_nspublic \solo ;

    \_doc
        \`\refrain` used to print refrain mark.
        `Refrain` is printed before margins with `\llap`. Text can be easily changed in `\_sdef` part. 
    \_cod

\_sdef{_mt:refrain:cs}{Ref.}
\_sdef{_mt:refrain:en}{Chorus}

\_def\.refrain{%
    \_goodbreak\_bigskip\_leavevmode%
    \_llap{{\_bf\_mtext{refrain}\_enskip}}%
    }

\_nspublic \refrain ;

    \_doc
        \`\verse` used to print verse mark. Verse number is counted in \~`\.verscnt`
        Verse number in () is printed before margins with `\llap`. 
    \_cod

\_def\.verse{%
    \_goodbreak\_bigskip\_leavevmode%
    \_llap{\_bf(\_the\.verscnt)\_enskip}%
    \_advance\.verscnt by 1%
    }

\_nspublic \verse ;

    \_doc
        \`\chord` (or \`\ch`, an alias) used to print chord mark.  
    \_cod

\_def\.chordfont{\_typoscale[800/800]\_bf}

\_def\.chord#1{%
    \_noindent\_raise \_the\_optsize \_hbox to 0pt{{\.chordfont #1}\_hss%
        \_noindent\_raise 4mm \_hbox to 1pt{\_hfil}%
        }%
}
\_def\.ch#1{\.chord{#1}}

\_nspublic \chord \ch;
    
    \_doc
        Here we prepare the documenent for optional twopage mode. \`\.twopagemodesreg` acts like a boolean for enabling the whole functionality in the first place. Holding 0 we mean false and do not enforce the page separation. Holding more than 0, we mean true and enable two page mode.
        \`\.songpagecount` is a count register which holds the number of pages of current song. At the moment, this must be set manually.  
    \_cod

\_newcount\.twopagemodesreg % sreg--status register
\_newcount\.songpagecount
%default values
\.twopagemodesreg=0
\.songpagecount=1

    \_doc
        \`\twopagemode` enables two page mode by setting \~`\.twopagemodesreg` to 1. \`\twopage` indicates the next song will be a twopage one. This does nothing if the twopagemode is not enabled. 
        \`\songpages``{<number>}` indicates the song is spread over the inputed number of pages. Bear in mind the implementation of other macros is focused primarily on just two page songs.
    \_cod

\_def\.twopagemode{\.twopagemodesreg=1}

\_def\.twopage{\.songpagecount=2}

\_def\.songpages#1{\.songpagecount=#1}

\_nspublic \twopagemode \twopage \songpages ;

    \_doc
        \`\.twopagecheck` inserts an additional empty page and prints a warning to log file if the twopage mode is enabled, the song indicates its longer than a page and is not already correctly positioned.
        The correct positioning is on an odd page. Resets song page indicator \~`\.songpagescount`.
    \_cod

\_def\.twopagecheck{%
    \_ifnum \.twopagemodesreg > 0
        % \_wlog{TPMODE ENABLED}
        \_ifnum \.songpagecount > 1 
            % \_wlog {SONGPAGEINDICATOR PASSED}
            \_ifodd \_pageno \_else
            \_wlog{SONGBOOK WARNING | Two page mode inserts emergency empty page on page number \_the\_pageno.} \_vglue10pt\_vfill\_break
            \_fi
        \_fi
    \_fi%
    \.songpagecount=1\_relax
}

    \_doc
        This part defines \`\repetition` macros. Credit goes to Markéta Zadražilová original songbook 
        for the pdf literals. However, this is CURRENTLY UNFINISHED IN \optex/ V3. Creates repetion marks on new lines, which I dont want it to :d
    \_cod

\_def\.repetitionl{\.drawl}
\_def\.repetitionr#1{\.drawr\if$#1$ {} \else{\_bi\_hskip 0.5em#1x}\fi}
\_def\.repl{\.repetitionl}
\_def\.repr#1{\.repetitionr{#1}}

% disabled because its unfinished
% \_nspublic \repetitionl \repetitionr \repl \repr ;
% \_catcode`\|=13
% {\_catcode`\^^M=13
% \gdef|:#1:|#2^^M{\_noindent\drawl{\_bi #1}\drawr\if:#2: {} \else {\_bi \_hskip 0.5em  #2x} \fi}}

\_def\.lrepsign{\_pdfliteral{q
.5 w
2 10 m
0 8 l	%horní šikmá čára
0 2 l 	%kratší vertikální čára
2 0 l	%dolní šikmá čára
S
1 9 m
1 1 l	%delší přepažující vertikální čára
S
2 7 m
2 6 l	%horní bod
S
2 4 m
2 3 l	%spodní bod
S
Q}}

\_def\.rrepsign{\_pdfliteral{q
-1 0 0 1 0 0 cm		%zrcadlení podle osy y
\.lrepsign
Q}}

\_newcount\.lrepsignnb
\_setbox0=\_hbox to 3pt{\_vbox to 10pt{\_vss\.lrepsign}\_hss}
\_pdfxform 0 \.lrepsignnb=\_pdflastxform
\_def\.drawl{\_pdfrefxform\.lrepsignnb}

\_newcount\.rrepsignnb
\_setbox0=\_hbox to 3pt{\_hss \_vbox to 10pt{\_vss\.rrepsign}}
\_pdfxform 0 \.rrepsignnb=\_pdflastxform
\_def\.drawr{\_pdfrefxform\.rrepsignnb}

\_endnamespace
\_endcode

\_doc
    % \load [doc,songbook]

    % \tit Modular songbook formatter\fnotemark1
    % \fnotetext{Available at \url{https://github.com/BasileosFelices/optex-zpevnik}}
    % \hfill Version: \_zpevnik_version \par
    % \centerline{semestrální práce BI-\TeX/ LS 2022/2023}
    % \centerline{\it Filip Špelina, 2023}

    % \notoc\nonum\sec Table of contents
    % \maketoc
    % \printdoctail scenar.opm % prints the documantation written after \_endcode
    % \sec[impl] Implementation
    % \printdoc scenar.opm % print code + local documentation
    % \sec Index
    % \begmulti 3
    %     \tt \makeindex     
    % \endmulti
    % \bye
\_cod

\endinput
\bye